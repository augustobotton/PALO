import numpy as np
from scipy.interpolate import pchip_interpolate
from math import sqrt, pi, log10, sin

# Data for the continuous drag coefficient calculation
CD = np.array([[0.0000,    0.4736],
    [0.1609,    0.4736],
    [0.3448,    0.4764],
    [0.4828,    0.4875],
    [0.5261,    0.5001],
    [0.6424,    0.5141],
    [0.7091,    0.5389],
    [0.7521,    0.5646],
    [0.8463,    0.5905],
    [0.8736,    0.6153],
    [0.9065,    0.6667],
    [0.9378,    0.6375],
    [0.9492,    0.7029],
    [0.9530,    0.7217],
    [0.9721,    0.7858],
    [0.9759,    0.8046],
    [0.9949,    0.8680],
    [0.9987,    0.8866],
    [1.0049,    1.0313],
    [1.0115,    0.9833],
    [1.0178,    0.9502],
    [1.0247,    1.0133],
    [1.0345,    0.9667],
    [1.1264,    1.0125],
    [1.1494,    0.9958],
    [1.2184,    0.9833],
    [1.2644,    0.9653],
    [1.2656,    0.9569],
    [1.3037,    0.9398],
    [1.3494,    0.9193],
    [1.3952,    0.8998],
    [1.4409,    0.8797],
    [1.4866,    0.8597],
    [1.5324,    0.8415],
    [1.5862,    0.8194],
    [1.6696,    0.7925],
    [1.7382,    0.7706],
    [1.8068,    0.7491],
    [1.8754,    0.7277],
    [1.9770,    0.6944],
    [2.1842,    0.6597],
    [2.2757,    0.6445],
    [2.3557,    0.6315],
    [2.6073,    0.5941],
    [2.7331,    0.5785],
    [2.8703,    0.5596],
    [2.9885,    0.5458],
    [3.1695,    0.5396],
    [3.4306,    0.5272],
    [3.6822,    0.5171],
    [3.9719,    0.5109],
    [4.1853,    0.5060],
    [4.4369,    0.5019],
    [4.6885,    0.4979],
    [4.9545,    0.4920],
    [5.1821,    0.4923],
    [5.4432,    0.4921],
    [5.6948,    0.4921],
    [5.9463,    0.4908],
    [6.1979,    0.4908],
    [6.4495,    0.4901],
    [6.7011,    0.4894],
    [6.9526,    0.4893],
    [7.2042,    0.4881],
    [7.4558,    0.4880],
    [7.7073,    0.4872],
    [7.9589,    0.4866],
    [8.2105,    0.4865],
    [8.4621,    0.4853],
    [8.7136,    0.4852],
    [8.9652,    0.4845],
    [9.2168,    0.4839],
    [9.4683,    0.4837],
    [9.7199,    0.4825],
    [10.2231,   0.4823],
    [10.4746,   0.4825],
    [10.7262,   0.4825],
    [10.9778,   0.4825],
    [11.2294,   0.4825],
    [11.4809,   0.4825],
    [11.7325,   0.4824]])

def interpCD(M):
    """
    Function to calculate the continuous drag coefficient.
    """
    return pchip_interpolate(CD[:,0], CD[:,1], M)

def modelo_aerodinamico(V,h,M,Kn,T,R):
    """
    Drag model according to the reference 
    TEWARI, A. Atmospheric and Space Flight Dynamics: 
    Modelling and simulation with MATLAB and Simulink. Boston: Birkhauser, 2007.
    Example 12.6
    Inputs
    V: speed (m/s)
    M: Mach number
    Kn: Knudsen number
    T: Temperature (K)
    R: Ideal gas constant of air (J/kg.K)
    Output
    CD: Drag coefficient
    """
    s=V/sqrt(2*R*T)
    CDfm=1.75+sqrt(pi)/(2*s)
    CDc=interpCD(M)
    if h<2000e3:
        if Kn<0.0146:
            CD=CDc
        elif Kn<14.5:
            CD=CDc+(CDfm-CDc)*((1/3)*log10(Kn/sin(30*pi/180))+0.05113)
        else:
            CD=CDfm
    else:
        CD=0
    return CD