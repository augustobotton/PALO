import numpy as np

# PROPULSÃO
ISP_VEC = [251.0, 271.0, 315.0]     # IMPULSO ESPECÍFICO    s
MP_VEC  = [5.522E4, 11058, 243.6, 0]# MASSA DE PROPELENTE   kg
TQ_VEC  = [62.0, 64.62, 301.0]      # TEMPO DE QUEIMA       s

# ESTRUTURA
MS_VEC  = [7750.0, 1367.0, 64.7544] # MASSA ESTRUTURAL      kg
ML      = 13.0                      # MASSA DE CARGA ÚTIL   kg

# AERODINÂMICA
FC      = 1.28                      # FATOR DE CORREÇÃO     1
SREF    = [7.667, 1.5, 1.5, 1.5]    # ÁREA DE REFERÊNCIA    m^2
LVEC    = [20.71, 13.38, 6.28, 1.0] # COMPRIMENTO TOTAL     m

# Vetor com fator de correção para cada estágio
FC_VEC  =   np.divide(                                      \
                        np.add(                             \
                                1,                          \
                                np.divide(                  \
                                            LVEC[:],        \
                                            LVEC[0]    )    \
                                ),                          \
                        2.0                                 )

SREF    = np.multiply(SREF, FC_VEC) # ÁREA DE REFERÊNCIA CORRIGIDA  m^2
LC      = 1.50                      # COMPRIMENTO CARACTERÍSTICO    m
DT      = 10                        # DELTA T REF. ATMOSFERA PADR.  K

# PLANETA
RE      = 6378.1370E3               # DIÂMETRO DO PLANETA   m
WE      = 7.2921150E-5              # VEL. INERC. ROTAÇÃO   rad/s
G       = 9.80665                   # ACEL. GRAV. NIV. MAR  m/s^2
MUT     = 3.986004418E14            # PARAM. GRAV.          m^3/s^2

J2      = 0.00108263                # CONSTANTES DE JEFFERY
J3      = -0.00000254               # .
J4      = -0.00000161               # .
TG      = 0.0                       # TEMPO DE LONGTD. = 0  s

# CONDIÇÕES INICIAIS - CEA
H0      = 0.0                       # ALTITUDE DA BASE  m
DELTA0  = np.rad2deg(-2.3267844)    # LATITUDE INICIAL  rad
LON0    = np.rad2deg(-4.4111042)    # LONGITUDE INICIAL rad
L_RAIL  = LVEC[0]                   # COMPRIMENTO DO TRILHO

# PARÂMETROS DA ÓRBITA DESEJADA
IN_GSO  = np.rad2deg(5.0)           # INCLINAÇÃO        rad
A_GSO   = 42.16414E6                # ALTITUDE          m
V_GSO   = np.sqrt(MUT/A_GSO)        # VELOCIDADE        m/s

# PARÂMETROS PROPULSIVOS
TS_VEC  = [2.0, 2.0, 2.0]           # ESPERA ENTRE IGNIÇÃO  s
                                    # DE UM ESTÁGIO E
                                    # SEPARAÇÃO DO OUTRO

TEQ_VEC = [5.0, 1360.0]             # TEMPO DE ESPERA PARA  s
                                    # IGNITAR ESTÁGIO APÓS
                                    # SEPARAÇÃO DO ANTERIOR

TQ3_VEC  = [262.0, 39.0]            # DURAÇÃO DE QUEIMA     s
                                    # DAS IGNIÇÕES DO
                                    # MOTOR 3° ESTÁGIO

# MASSAS DE PROPELENTE QUEIMADAS NO 3° ESTAGIO  kg
MP3_VEC = [ MP_VEC[2] * TQ3_VEC[0] / TQ_VEC[2], \
            MP_VEC[2] * TQ3_VEC[1] / TQ_VEC[2]  ]

# VETORES DE TEMPO
TI      = [0.0, 0.0, 0.0, 0.0]
TQ      = [0.0, 0.0, 0.0, 0.0]
TS      = [0.0, 0.0, 0.0]

TQ[0] = TI[0] + TQ_VEC[0]
TS[0] = TQ[0] + TS_VEC[0]

TI[1] = TS[0] + TEQ_VEC[0]
TQ[1] = TI[1] + TQ_VEC[1]
TS[1] = TQ[1] + TS_VEC[1]

TI[2] = TS[1] + TEQ_VEC[1]
TQ[2] = TI[2] + TQ_VEC[2]

TI[3] = 1E10
TQ[3] = TI[3] + TQ3_VEC[1]
TS[2] = TQ[3] + TS_VEC[2]

# COMPLEMENTO DAS MASSAS DE PROPELENTE
MP_VEC[2] = MP3_VEC[0]
MP_VEC[3] = MP3_VEC[1]

# VARIÁVEIS DE CONTROLE DO PROGRAMA
PHII_SIGN = 0
HAS_APOGEE = 0

# PARÂMETROS CALCULADOS
M0 = np.sum(MP_VEC) + np.sum(MS_VEC) + ML   # MASSA INICIAL DO FOGUETE  kg
R0 = RE + H0                                # DISTÂNCIA RADIAL INICIAL  m

## ESTUDO SIMPLIFICADO PELA EQUAÇÃO DE FOGUETE
SIGMA = np.divide(MS_VEC, np.add(MS_VEC, MP_VEC[0:3]))
